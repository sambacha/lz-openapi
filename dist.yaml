openapi: 3.0.0
info:
  title: Gateway LayerZero API
  description: Tannhauser Gateway LayerZero API
  version: 1.0.1
  contact: {}
tags: []
servers: []
schemes:
  - https
basePath: /api
consumes:
  - application/json
produces:
  - application/json
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    AuthDto:
      type: object
      properties:
        signature:
          type: string
          example: >-
            0x94bf8475ea508b148b3a6df470fbe7460ce8fac2c611e197bcdc56a7da4783f50132dcf71c306a4098d7333fa4d59fbcf31be976d72574a1c8288285d455f4491b
      required:
        - signature
    AuthResponseDto:
      type: object
      properties:
        access_token:
          type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      required:
        - access_token
    TransferDto:
      type: object
      properties:
        ethAddress:
          type: string
          example: '0x000000618E8ea9DcA789ba7978fE67CdD76Efaf0'
        asset:
          type: string
          example: FOLD
        to:
          type: string
          example: ETH
        nonce:
          type: string
          example: '0xd2549e0a95762fcc2b8a1bbf9bd081c12a8e6e783d1dad238d95cad26a65ee46af'
      required:
        - ethAddress
        - asset
        - to
        - nonce
    TransactionResponseDto:
      type: object
      properties:
        createdAt:
          format: date-time
          type: string
          example: '2020-10-16T20:48:18.476Z'
        address:
          type: string
          example: '0x000000618E8ea9DcA789ba7978fE67CdD76Efaf0'
        type:
          type: string
          example: deposit
        status:
          type: string
          example: pending
        transfer:
          $ref: '#/components/schemas/TransferDto'
        namespace:
          type: string
          example: relay.bond
        amount:
          type: number
          example: '0.01'
        ethTxHash:
          type: string
          example: '0xafda5e4205b21292df4faa6a70e989a05438d67c8890b35c5d0c765c4a4ad734'
      required:
        - createdAt
        - address
        - type
        - status
        - transfer
        - namespace
        - amount
        - ethTxHash
    TransactionUpdateDto:
      type: object
      properties:
        status:
          type: string
          example: confirmed
        ethTxHash:
          type: string
          example: '0xafda5e4205b21292df4faa6a70e989a05438d67c8890b35c5d0c765c4a4ad734'
        message:
          type: string
          example: Unhandled rejection
      required:
        - status
        - ethTxHash
        - message
    GatewayAddressDto:
      type: object
      properties:
        address:
          type: string
          example: relay.bond
        params:
          type: string
          example: 0x000000F2869469220b6c2EdFF2d685bd5e74f784==
      required:
        - address
        - params
    TransactionCreateDto:
      type: object
      properties:
        transfer:
          $ref: '#/components/schemas/TransferDto'
        gatewayAddress:
          $ref: '#/components/schemas/GatewayAddressDto'
        namespace:
          type: string
          example: relay.bond
        amount:
          type: number
          example: '0.01'
        ethTxHash:
          type: string
          example: '0xafda5e4205b21292df4faa6a70e989a05438d67c8890b35c5d0c765c4a4ad734'
      required:
        - transfer
        - gatewayAddress
        - namespace
        - amount
        - ethTxHash
    TransactionCounterResponseDto:
      type: object
      properties:
        counter:
          type: number
          example: 42
      required:
        - counter
definitions:
 EthereumTx:
    required:
      - txHash
      - to
      - data
      - gas
      - gasPrice
      - nonce
      - value
      - from
    type: object
    properties:
      txHash:
        title: Tx hash
        type: string
      to:
        title: To
        type: string
        x-nullable: true
      data:
        title: Data
        type: string
      blockNumber:
        title: Block number
        type: string
        readOnly: true
      blockTimestamp:
        title: Block timestamp
        type: string
        readOnly: true
      created:
        title: Created
        type: string
        format: date-time
        readOnly: true
      modified:
        title: Modified
        type: string
        format: date-time
        readOnly: true
      gasUsed:
        title: Gas used
        type: string
        format: decimal
        x-nullable: true
      status:
        title: Status
        type: integer
        maximum: 2147483647
        minimum: -2147483648
        x-nullable: true
      transactionIndex:
        title: Transaction index
        type: integer
        maximum: 2147483647
        minimum: 0
        x-nullable: true
      gas:
        title: Gas
        type: string
        format: decimal
      gasPrice:
        title: Gas price
        type: string
        format: decimal
      nonce:
        title: Nonce
        type: string
        format: decimal
      value:
        title: Value
        type: string
        format: decimal
      from:
        title: From
        type: string
 ERC20:
    required:
      - ethereumTx
      - logIndex
      - tokenAddress
      - to
      - value
      - from
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      ethereumTx:
        $ref: '#/definitions/EthereumTx'
      logIndex:
        title: Log index
        type: integer
        minimum: 0
      tokenAddress:
        title: Token address
        type: string
      to:
        title: To
        type: string
      value:
        title: Value
        type: string
        minLength: 1
      from:
        title: From
        type: string
 ERC721:
    required:
      - ethereumTx
      - logIndex
      - tokenAddress
      - to
      - tokenId
      - from
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      ethereumTx:
        $ref: '#/definitions/EthereumTx'
      logIndex:
        title: Log index
        type: integer
        minimum: 0
      tokenAddress:
        title: Token address
        type: string
      to:
        title: To
        type: string
      tokenId:
        title: Token id
        type: string
        minLength: 1
      from:
        title: From
        type: string
 Token:
    required:
      - address
      - name
      - symbol
      - decimals
    type: object
    properties:
      address:
        title: Address
        type: string
        maxLength: 42
        minLength: 1
      logoUri:
        title: Logo uri
        type: string
        readOnly: true
      default:
        title: Default
        type: string
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 60
        minLength: 1
      symbol:
        title: Symbol
        type: string
        maxLength: 60
        minLength: 1
      description:
        title: Description
        type: string
      decimals:
        title: Decimals
        type: integer
        maximum: 32767
        minimum: 0
      websiteUri:
        title: Website uri
        type: string
        format: uri
        maxLength: 200
      gas:
        title: Gas
        type: boolean
paths:
  /auth/login:
    post:
      operationId: AuthController_login
      summary: Login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponseDto'
      tags:
        - auth
  /transactions:
    post:
      operationId: TransactionsController_createTransaction
      summary: Create a transaction
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreateDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - transactions
      security:
        - bearer: []
    put:
      operationId: TransactionsController_updateTransaction
      summary: Update a transaction
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionUpdateDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
      tags:
        - transactions
      security:
        - bearer: []
    get:
      operationId: TransactionsController_getTransaction
      summary: Get a transaction
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponseDto'
      tags:
        - transactions
      security:
        - bearer: []
  /transactions/count:
    get:
      operationId: TransactionsController_getTransactionsCount
      summary: Get transactions count
      parameters:
        - name: status
          required: false
          in: query
          schema:
            enum:
              - pending
              - confirmed
              - canceled
              - error
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCounterResponseDto'
      tags:
        - transactions
  /readiness:
    get:
      operationId: ReadinessController_check
      summary: Readiness check
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
      tags:
        - health check
  /liveness:
    get:
      operationId: LivenessController_check
      summary: Liveness check
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - liveness check
